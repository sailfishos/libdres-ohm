#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.72])

AC_INIT([dres],[m4_esyscmd(build-aux/git-version-gen .tarball-version)],[multimedia at maemo.org])

AC_CONFIG_SRCDIR([src])
AC_CONFIG_MACRO_DIR([m4])

DOC_SUPPORT_INIT

AM_INIT_AUTOMAKE(AC_PACKAGE_NAME, AC_PACKAGE_VERSION)
AC_CONFIG_HEADERS([include/dres/config.h])

AC_SUBST(ACLOCAL_AMFLAGS, "-I m4")

m4_define(version_major, `echo $VERSION | cut -d. -f1 | cut -d- -f1`)
m4_define(version_minor, `echo $VERSION | cut -d. -f2 | cut -d- -f1`)
m4_define(version_patch, `echo $VERSION | cut -d. -f3 | cut -d- -f1`)

AC_SUBST(VERSION)
AC_SUBST(VERSION_MAJOR, version_major)
AC_SUBST(VERSION_MINOR, version_minor)
AC_SUBST(VERSION_PATCH, version_patch)
AC_SUBST(VERSION_FULL, version_major.version_minor.version_patch)

# libtool API versioning
LIBDRES_VERSION_INFO="0:0:0"
AC_SUBST(LIBDRES_VERSION_INFO)

# Disable static libraries.
AC_DISABLE_STATIC

# Checks for programs.
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LEX
AC_PROG_YACC
AM_PROG_CC_C_O
AM_PROG_LIBTOOL
AM_PROG_LEX
AC_SUBST(LEXLIB)

# Checks for header files.
m4_warn([obsolete],
[The preprocessor macro 'STDC_HEADERS' is obsolete.
  Except in unusual embedded environments, you can safely include all
  C89 headers unconditionally.])dnl
# Autoupdate added the next two lines to ensure that your configure
# script's behavior did not change.  They are probably safe to remove.
AC_CHECK_INCLUDES_DEFAULT
AC_PROG_EGREP

AC_CHECK_HEADERS([stdlib.h string.h unistd.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_CHECK_FUNCS([memset strchr strdup strerror])

# Enable extra GCC flags.
if test "$GCC" = "yes"; then
    CPPFLAGS="$CPPFLAGS -Wall -Wformat"
fi

# Extra compilation warnings.
AC_ARG_ENABLE(extra-warnings,
              [  --enable-extra-warnings enable extra compilation warnings],
              enable_extra_warnings=$enableval,enable_extra_warnings=no)
if test x$enable_extra_warnings = xyes ; then
    AC_MSG_CHECKING([for extra compiler warnings])
    if test "$GCC" = "yes"; then
        CPPFLAGS="$CPPFLAGS -Wextra"
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT([no (compiler not GCC)])
    fi
fi

# Check for glib and gobject (factstore).
PKG_CHECK_MODULES(GLIB, glib-2.0 gobject-2.0)
AC_SUBST(GLIB_CFLAGS)
AC_SUBST(GLIB_LIBS)

# Checks for gmodule.
PKG_CHECK_MODULES(GMODULE, gmodule-2.0)
AC_SUBST(GMODULE_CFLAGS)
AC_SUBST(GMODULE_LIBS)

# Checks for libohmplugin and libohmfact.
PKG_CHECK_MODULES(LIBOHMPLUGIN, libohmplugin)
AC_SUBST(LIBOHMPLUGIN_CFLAGS)
AC_SUBST(LIBOHMPLUGIN_LIBS)

PKG_CHECK_MODULES(LIBOHMFACT, libohmfact)
AC_SUBST(LIBOHMFACT_CFLAGS)
AC_SUBST(LIBOHMFACT_LIBS)

# OHM build compatibility variables.
AC_SUBST(OHM_PLUGIN_CFLAGS, "$LIBOHMPLUGIN_CFLAGS $LIBOHMFACT_CFLAGS $GLIB_CFLAGS $GMODULE_CFLAGS")
AC_SUBST(OHM_PLUGIN_LIBS, "$LIBOHMPLUGIN_LIBS $LIBOHMFACT_LIBS $GLIB_LIBS $GMODULE_LIBS")

AC_SUBST(OHM_CONF_DIR, "\$(sysconfdir)/ohm")
AC_SUBST(OHM_PLUGIN_CONF_DIR, "\$(OHM_CONF_DIR)/plugins.d")
AC_SUBST(OHM_PLUGIN_DIR, "\$(libdir)/ohm")

# Checks for libprolog.
PKG_CHECK_MODULES(LIBPROLOG, libprolog)
AC_SUBST(LIBPROLOG_CFLAGS)
AC_SUBST(LIBPROLOG_LIBS)

# Checks for libtrace.
PKG_CHECK_MODULES(LIBTRACE, libsimple-trace >= 0.0.0)
AC_SUBST(LIBTRACE_CFLAGS)
AC_SUBST(LIBTRACE_LIBS)

# Check symbol visibility constraint support.
AC_CHECK_CCOPT_VISIBILITY
AC_SUBST(CCOPT_VISIBILITY_HIDDEN)

# shave
SHAVE_INIT([build-aux], [enable])

AC_CONFIG_FILES([build-aux/shave
		 build-aux/shave-libtool
		 Makefile
		 src/Makefile
		 src/libdres.pc
		 include/Makefile
		 ohm-plugin/Makefile
		 tests/Makefile
		 doc/Makefile
])

AC_OUTPUT

echo "Libdres version: $VERSION"
echo "    API version: ${LIBDRES_VERSION_INFO//:/.}"
